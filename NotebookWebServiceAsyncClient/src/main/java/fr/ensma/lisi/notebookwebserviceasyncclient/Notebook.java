
package fr.ensma.lisi.notebookwebserviceasyncclient;

import java.util.List;
import java.util.concurrent.Future;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;

import fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexTypeResponse;
import fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByName;
import fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByNameResponse;
import fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonsResponse;
import fr.ensma.lisi.notebookwebserviceasyncclient.ObjectFactory;
import fr.ensma.lisi.notebookwebserviceasyncclient.Person;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Notebook", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Notebook {


    /**
     * 
     * @param birthyear
     * @param address
     * @param name
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addPersonWithSimpleType", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithSimpleType")
    public void addPersonWithSimpleType(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "birthyear", targetNamespace = "")
        String birthyear);

    /**
     * 
     * @param personName
     * @return
     *     returns javax.xml.ws.Response<fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByNameResponse>
     */
    @WebMethod(operationName = "getPersonByName")
    @RequestWrapper(localName = "getPersonByName", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByName")
    @ResponseWrapper(localName = "getPersonByNameResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByNameResponse")
    public Response<GetPersonByNameResponse> getPersonByNameAsync(
        @WebParam(name = "personName", targetNamespace = "")
        String personName);

    /**
     * 
     * @param asyncHandler
     * @param personName
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getPersonByName")
    @RequestWrapper(localName = "getPersonByName", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByName")
    @ResponseWrapper(localName = "getPersonByNameResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByNameResponse")
    public Future<?> getPersonByNameAsync(
        @WebParam(name = "personName", targetNamespace = "")
        String personName,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPersonByNameResponse> asyncHandler);

    /**
     * 
     * @param personName
     * @return
     *     returns fr.ensma.lisi.notebookwebserviceasyncclient.Person
     */
    @WebMethod
    @WebResult(name = "getPersonResult", targetNamespace = "")
    @RequestWrapper(localName = "getPersonByName", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByName")
    @ResponseWrapper(localName = "getPersonByNameResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonByNameResponse")
    public Person getPersonByName(
        @WebParam(name = "personName", targetNamespace = "")
        String personName);

    /**
     * 
     * @param newPerson
     * @return
     *     returns javax.xml.ws.Response<fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexTypeResponse>
     */
    @WebMethod(operationName = "addPersonWithComplexType")
    @RequestWrapper(localName = "addPersonWithComplexType", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexType")
    @ResponseWrapper(localName = "addPersonWithComplexTypeResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexTypeResponse")
    public Response<AddPersonWithComplexTypeResponse> addPersonWithComplexTypeAsync(
        @WebParam(name = "newPerson", targetNamespace = "")
        Person newPerson);

    /**
     * 
     * @param newPerson
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "addPersonWithComplexType")
    @RequestWrapper(localName = "addPersonWithComplexType", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexType")
    @ResponseWrapper(localName = "addPersonWithComplexTypeResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexTypeResponse")
    public Future<?> addPersonWithComplexTypeAsync(
        @WebParam(name = "newPerson", targetNamespace = "")
        Person newPerson,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<AddPersonWithComplexTypeResponse> asyncHandler);

    /**
     * 
     * @param newPerson
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "addPersonWithComplexTypeResult", targetNamespace = "")
    @RequestWrapper(localName = "addPersonWithComplexType", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexType")
    @ResponseWrapper(localName = "addPersonWithComplexTypeResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.AddPersonWithComplexTypeResponse")
    public boolean addPersonWithComplexType(
        @WebParam(name = "newPerson", targetNamespace = "")
        Person newPerson);

    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonsResponse>
     */
    @WebMethod(operationName = "getPersons")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonsResponse")
    public Response<GetPersonsResponse> getPersonsAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getPersons")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonsResponse")
    public Future<?> getPersonsAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPersonByName> asyncHandler);

    /**
     * 
     * @return
     *     returns java.util.List<fr.ensma.lisi.notebookwebserviceasyncclient.Person>
     */
    @WebMethod
    @WebResult(name = "getPersonsResult", targetNamespace = "")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://notebookwebservice.lisi.ensma.fr/", className = "fr.ensma.lisi.notebookwebserviceasyncclient.GetPersonsResponse")
    public List<Person> getPersons();

}
